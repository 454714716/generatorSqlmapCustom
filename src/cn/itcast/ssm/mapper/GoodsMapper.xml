<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.Goods" >
    <id column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="cat_id" property="catId" jdbcType="SMALLINT" />
    <result column="brand_id" property="brandId" jdbcType="SMALLINT" />
    <result column="goods_sn" property="goodsSn" jdbcType="CHAR" />
    <result column="goods_number" property="goodsNumber" jdbcType="SMALLINT" />
    <result column="shop_price" property="shopPrice" jdbcType="DECIMAL" />
    <result column="market_price" property="marketPrice" jdbcType="DECIMAL" />
    <result column="click_count" property="clickCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_id, goods_name, cat_id, brand_id, goods_sn, goods_number, shop_price, market_price, 
    click_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.ssm.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.Goods" >
    insert into goods (goods_id, goods_name, cat_id, 
      brand_id, goods_sn, goods_number, 
      shop_price, market_price, click_count
      )
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{catId,jdbcType=SMALLINT}, 
      #{brandId,jdbcType=SMALLINT}, #{goodsSn,jdbcType=CHAR}, #{goodsNumber,jdbcType=SMALLINT}, 
      #{shopPrice,jdbcType=DECIMAL}, #{marketPrice,jdbcType=DECIMAL}, #{clickCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="catId != null" >
        cat_id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="goodsSn != null" >
        goods_sn,
      </if>
      <if test="goodsNumber != null" >
        goods_number,
      </if>
      <if test="shopPrice != null" >
        shop_price,
      </if>
      <if test="marketPrice != null" >
        market_price,
      </if>
      <if test="clickCount != null" >
        click_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="catId != null" >
        #{catId,jdbcType=SMALLINT},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=SMALLINT},
      </if>
      <if test="goodsSn != null" >
        #{goodsSn,jdbcType=CHAR},
      </if>
      <if test="goodsNumber != null" >
        #{goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="shopPrice != null" >
        #{shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null" >
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="clickCount != null" >
        #{clickCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.catId != null" >
        cat_id = #{record.catId,jdbcType=SMALLINT},
      </if>
      <if test="record.brandId != null" >
        brand_id = #{record.brandId,jdbcType=SMALLINT},
      </if>
      <if test="record.goodsSn != null" >
        goods_sn = #{record.goodsSn,jdbcType=CHAR},
      </if>
      <if test="record.goodsNumber != null" >
        goods_number = #{record.goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.shopPrice != null" >
        shop_price = #{record.shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.marketPrice != null" >
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.clickCount != null" >
        click_count = #{record.clickCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      cat_id = #{record.catId,jdbcType=SMALLINT},
      brand_id = #{record.brandId,jdbcType=SMALLINT},
      goods_sn = #{record.goodsSn,jdbcType=CHAR},
      goods_number = #{record.goodsNumber,jdbcType=SMALLINT},
      shop_price = #{record.shopPrice,jdbcType=DECIMAL},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      click_count = #{record.clickCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.Goods" >
    update goods
    <set >
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="catId != null" >
        cat_id = #{catId,jdbcType=SMALLINT},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=SMALLINT},
      </if>
      <if test="goodsSn != null" >
        goods_sn = #{goodsSn,jdbcType=CHAR},
      </if>
      <if test="goodsNumber != null" >
        goods_number = #{goodsNumber,jdbcType=SMALLINT},
      </if>
      <if test="shopPrice != null" >
        shop_price = #{shopPrice,jdbcType=DECIMAL},
      </if>
      <if test="marketPrice != null" >
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="clickCount != null" >
        click_count = #{clickCount,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.Goods" >
    update goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      cat_id = #{catId,jdbcType=SMALLINT},
      brand_id = #{brandId,jdbcType=SMALLINT},
      goods_sn = #{goodsSn,jdbcType=CHAR},
      goods_number = #{goodsNumber,jdbcType=SMALLINT},
      shop_price = #{shopPrice,jdbcType=DECIMAL},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      click_count = #{clickCount,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
</mapper>